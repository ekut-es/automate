image: almalinux:8

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  POETRY_HOME: "$CI_PROJECT_DIR/.poetry"
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - test
  - integration_test
  - deploy_test
  - deploy

before_script:
  - yum install epel-release -y
  - yum install git sudo python39 python39-devel -y
  - yum groupinstall 'Development Tools' -y
  - yum install postgresql-devel -y
  - python3.6 -m ensurepip
  
  # Install poetry using recommended method
  - export  POETRY_HOME="$CI_PROJECT_DIR/.poetry"
  - curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python3.6
  - export PATH=${POETRY_HOME}/bin:${PATH}

  # Work around: https://github.com/python-poetry/poetry/issues/3199
  - poetry config experimental.new-installer false
  
variables:
  LC_ALL: "en_US.UTF-8"
  
test:
  stage: test
  script:
    - set -e
    - poetry install
    - poetry run inv mypy
    - poetry run inv test 
  tags:
    - docker

integration_test:
  stage: integration_test
  script:
    - set -e
    - poetry install
    - poetry run inv mypy
    - poetry run inv test --integration 
  tags:
    - docker

    
integration_test_with_db:
  stage: integration_test

  services:
    - postgres:10

  variables:
    POSTGRES_HOST: postgres
    POSTGRES_DB: der_schrank_test
    POSTGRES_PORT: 5432
    POSTGRES_USER: der_schrank_test
    POSTGRES_PASSWORD: der_schrank_test
  
  script:
    - set -e
    - poetry install -E postgres
    - poetry run inv mypy
    - poetry run inv test --integration
  tags:
    - docker


build_doc:
  before_script:
    - python3 -m virtualenv -p python3 .venv
    - source .venv/bin/activate
    - pip install poetry 
  script:
    - set -e
    - source .venv/bin/activate
    - poetry install
    - poetry run pydoc-markdown --build --site-dir site
    - mkdir -p /afs/wsi/home/gerum/public_html/automate
    - cp -r build/docs/site/* /afs/wsi/home/gerum/public_html/automate
  stage: deploy
  tags:
    - afs

  only:
    refs:
      - master


deploy to github:
  stage: build
  image: ubuntu:latest
  before_script:
    - apt update
    - apt -y install openssh-client git git-lfs

  variables:
    # Prevent "shallow update not allowed" error.
    # Set it to maximum possible count of *new* commits that you foresee being pushed to a remote.
    GIT_DEPTH: 1000

  only:
    - master
  script:
    - echo "Pushing upstream"
    - ./scripts/git-push git@github.com:ekut-es/automate.git master
  tags:
    - docker